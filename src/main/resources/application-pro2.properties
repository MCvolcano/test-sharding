#######################################################################################
######################### sharding_jdbc 分库分表配置 ##################################
#########################           多库多表         ##################################
#######################################################################################

# 数据源 注：这里不能使用下划线_
sharding.jdbc.datasource.names=ds0,ds1

# 数据源一
sharding.jdbc.datasource.ds0.type=com.alibaba.druid.pool.DruidDataSource
sharding.jdbc.datasource.ds0.driver-class-name=com.mysql.jdbc.Driver
sharding.jdbc.datasource.ds0.url=jdbc:mysql://localhost:3306/preprc_1?characterEncoding=utf-8
sharding.jdbc.datasource.ds0.username=root
sharding.jdbc.datasource.ds0.password=root

# 数据源二
sharding.jdbc.datasource.ds1.type=com.alibaba.druid.pool.DruidDataSource
sharding.jdbc.datasource.ds1.driver-class-name=com.mysql.jdbc.Driver
sharding.jdbc.datasource.ds1.url=jdbc:mysql://localhost:3306/preprc_2?characterEncoding=utf-8
sharding.jdbc.datasource.ds1.username=root
sharding.jdbc.datasource.ds1.password=root

# 默认数据源
sharding.jdbc.config.sharding.default-data-source-name=ds0

## 分库策略 -- > 分表分库使用相同字段,则分库使用十位,分表使用个位(这里使用uid十位来分库,使用十位分库字段不能小于10)
sharding.jdbc.config.sharding.default-database-strategy.inline.sharding-column=uuid
sharding.jdbc.config.sharding.default-database-strategy.inline.algorithm-expression=ds$->{Math.abs(uuid.hashCode())%2}

## 分表策略||查询数据
sharding.jdbc.config.sharding.tables.preprcmsg.actual-data-nodes=ds$->{0..1}.preprcmsg_$->{1..2}
sharding.jdbc.config.sharding.tables.preprcmsg.table-strategy.inline.algorithm-expression=preprcmsg_$->{Math.abs(uuid.hashCode()) % 2 +1}
sharding.jdbc.config.sharding.tables.preprcmsg.table-strategy.inline.sharding-column=uuid

#打印sql
sharding.jdbc.config.sharding.props.sql.show=true

### 分库字段uid获取十位方法     -->  Long.parseLong(uid.toString().substring(uid.toString().length()-2,uid.toString().length()-1))
### ds$->{0..1}.Test_$->{0..1}  -->  查询0到1个使用分库下的所有0到1的分表数据
